services:

  db:
    image: postgres:16
    container_name: app_db
    environment:
      POSTGRES_DB: app
      POSTGRES_USER: app
      POSTGRES_PASSWORD: secret
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U app -d app"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build:
      context: ./backend
    container_name: app_backend
    user: "${UID}:${GID}"
    working_dir: /var/www
    environment:
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY:
      DB_CONNECTION: pgsql
      DB_HOST: db
      DB_PORT: 5432
      DB_DATABASE: app
      DB_USERNAME: app
      DB_PASSWORD: secret
    volumes:
      - ./backend:/var/www
    depends_on:                          # Ensure backend waits for a healthy DB.
      db:
        condition: service_healthy
    ports:
      - "5000:8000"
    command: >
      sh -lc "php artisan serve --host=0.0.0.0 --port=8000"

  # frontend:
  #   build:
  #     context: ./frontend
  #   container_name: app_frontend
  #   user: "${UID}:${GID}"
  #   working_dir: /usr/src/app
  #   environment:
  #     NODE_OPTIONS: --max-old-space-size=2048
  #   volumes:
  #     - ./frontend:/usr/src/app
  #   ports:
  #     - "4200:4200"
  #   command: >
  #     sh -lc "npm run start -- --host 0.0.0.0"

  # pgadmin:
  #   image: dpage/pgadmin4
  #   container_name: app_pgadmin
  #   environment:
  #     PGADMIN_DEFAULT_EMAIL: admin@example.com
  #     PGADMIN_DEFAULT_PASSWORD: secret
  #     PGADMIN_CONFIG_SERVER_MODE: 'False'
  #     PGADMIN_CONFIG_MASTER_PASSWORD_REQUIRED: 'False'
  #   volumes:
  #     - ./config/pgadmin/servers.json:/pgadmin4/servers.json
  #     - pgadmin_data:/var/lib/pgadmin
  #   ports:
  #     - "5050:80"
  #   depends_on:
  #     - db


volumes:
  pgdata:
  pgadmin_data: